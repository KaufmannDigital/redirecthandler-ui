prototype(Neos.RedirectHandler.Ui:Component.EditCreateForm) < prototype(Neos.Fusion:Component) {
    csrfToken = ''
    defaultStatusCode = ${Configuration.setting('Neos.RedirectHandler.Ui.defaultStatusCode')}
    statusCodes = ${Configuration.setting('Neos.RedirectHandler.Ui.statusCodes')}
    idPrefix = ''
    submitLabel = ${I18n.translate('Neos.RedirectHandler.Ui:Modules:addRedirect')}
    cancelLabel = ${I18n.translate('Neos.RedirectHandler.Ui:Modules:cancel')}
    mode = 'create'

    action = Neos.Fusion:UriBuilder {
        action = 'create'
    }

    renderer = afx`
        <form action={props.action} method="POST" class="add-redirect-form">
            <input type="hidden" name="__csrfToken" value={String.htmlSpecialChars(props.csrfToken)}/>
            <input type="hidden" name="moduleArguments[originalSourceUriPath]" id={props.idPrefix + 'originalSourceUriPath'} @if.editMode={props.mode == 'edit'}/>
            <input type="hidden" name="moduleArguments[originalHost]" id={props.idPrefix + 'originalHost'} @if.editMode={props.mode == 'edit'}/>

            <div class="row">
                <div class="neos-control-group">
                    <label class="neos-control-label" for={props.idPrefix + 'host'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:host')}</label>
                    <input name="moduleArguments[host]" id={props.idPrefix + 'host'} type="text" placeholder="www.example.org"/>
                </div>
                <div class="neos-control-group">
                    <label class="neos-control-label" for={props.idPrefix + 'sourceUriPath'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:sourceUriPath')}</label>
                    <input name="moduleArguments[sourceUriPath]" id={props.idPrefix + 'sourceUriPath'} type="text"
                           autofocus required="required" placeholder="the-old-url/product-a"/>
                </div>
                <div class="neos-control-group">
                    <label class="neos-control-label" for={props.idPrefix + 'statusCode'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:statusCode')}</label>
                    <select name="moduleArguments[statusCode]" id={props.idPrefix + 'statusCode'} value={props.defaultStatusCode}>
                        <Neos.Fusion:Loop items={props.statusCodes} itemName="label" itemKey="code">
                            <option value={code} selected="selected" selected.@if.isSelected={props.defaultStatusCode == code}
                                title={label != 'i18n' ? label : I18n.translate('Neos.RedirectHandler.Ui:Modules:statusCodes.' + code + '.tooltip')}>
                                {label != 'i18n' ? label : I18n.translate('Neos.RedirectHandler.Ui:Modules:statusCodes.' + code + '.label')}
                            </option>
                        </Neos.Fusion:Loop>
                    </select>
                </div>
                <div class="neos-control-group">
                    <label class="neos-control-label" for={props.idPrefix + 'targetUriPath'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:targetUriPath')}</label>
                    <input name="moduleArguments[targetUriPath]" id={props.idPrefix + 'targetUriPath'} type="text"
                           required="required" placeholder="the-new-url/product-a"/>
                </div>
                <div class="neos-control-group">
                    <label class="neos-control-label" for={props.idPrefix + 'startDateTime'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:startDateTime')}</label>
                    <input name="moduleArguments[startDateTime]" id={props.idPrefix + 'startDateTime'} type="text"
                           placeholder={I18n.translate('Neos.RedirectHandler.Ui:Modules:startDateTime.placeholder')} data-component="dateTimePicker" autocomplete="off"/>
                </div>
                <div class="neos-control-group">
                    <label class="neos-control-label" for={props.idPrefix + 'endDateTime'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:endDateTime')}</label>
                    <input name="moduleArguments[endDateTime]" id={props.idPrefix + 'endDateTime'} type="text"
                           placeholder={I18n.translate('Neos.RedirectHandler.Ui:Modules:endDateTime.placeholder')} data-component="dateTimePicker" autocomplete="off"/>
                </div>
                <div class="neos-control-group neos-control-group--large">
                    <label class="neos-control-label" for={props.idPrefix + 'comment'}>{I18n.translate('Neos.RedirectHandler.Ui:Modules:comment')}</label>
                    <textarea name="moduleArguments[comment]" id={props.idPrefix + 'comment'} type="text"
                           placeholder={I18n.translate('Neos.RedirectHandler.Ui:Modules:comment.placeholder')} rows="1"></textarea>
                </div>
                <div class="neos-control-group neos-control-group--auto">
                    <button type="submit" class="neos-button neos-button-primary">
                        {props.submitLabel}
                    </button>
                </div>
                <div class="neos-control-group neos-control-group--auto" @if.editMode={props.mode == 'edit'}>
                    <a class="neos-button add-redirect-form__cancel">
                        {props.cancelLabel}
                    </a>
                </div>
            </div>
        </form>
    `
}
